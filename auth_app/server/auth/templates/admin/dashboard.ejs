<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
            crossorigin="anonymous"
        />
        <style>
            .form_box_centre {
                height: 100%;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                padding: 13px;
                margin: 10px;
                border: 3px solid #d2d2d2;
                border-radius: 13px;
            }
        </style>
    </head>
    <body>
        <div id="app">
            <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="container-fluid">
                    <a class="navbar-brand" href="#">Admin Dashboard</a>
                    <button
                        class="navbar-toggler"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                    >
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link" href="#">Link</a>
                            </li>
                            <li class="nav-item dropdown">
                                <a
                                    class="nav-link dropdown-toggle"
                                    href="#"
                                    role="button"
                                    data-bs-toggle="dropdown"
                                    aria-expanded="false"
                                >
                                    Dropdown
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">Action</a></li>
                                    <li><a class="dropdown-item" href="#">Another action</a></li>
                                    <li>
                                        <hr class="dropdown-divider" />
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="#">Something else here</a>
                                    </li>
                                </ul>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link disabled">Disabled</a>
                            </li>
                        </ul>

                        <div class="d-flex">
                            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                                <li class="nav-item dropdown">
                                    <a
                                        class="nav-link dropdown-toggle"
                                        href="#"
                                        id="navbarDropdownMenuLink"
                                        role="button"
                                        data-bs-toggle="dropdown"
                                        aria-expanded="false"
                                    >
                                        Account
                                    </a>
                                    <ul
                                        class="dropdown-menu"
                                        aria-labelledby="navbarDropdownMenuLink"
                                        style="right: 0 !important; left: auto !important"
                                    >
                                        <li><a class="dropdown-item" href="#">Action</a></li>
                                        <li>
                                            <a class="dropdown-item" href="#">Another action</a>
                                        </li>
                                        <li>
                                            <a
                                                class="dropdown-item"
                                                v-bind:href="baseURL+'/auth/logout' "
                                                >Logout</a
                                            >
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </nav>

            <!-- user modal view -->
            <div class="modal" tabindex="-1" id="userDetailsModal">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">User Details</h5>
                            <button
                                type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close"
                            ></button>
                        </div>
                        <div class="modal-body">
                            <from @submit.prevent="updateUser">
                                <div class="input-group flex-nowrap">
                                    <span
                                        class="input-group-text"
                                        id="addon-wrapping"
                                        style="width: 105px"
                                        >Name</span
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        placeholder="/xyz"
                                        aria-describedby="addon-wrapping"
                                        v-model="modalUser.name"
                                        disabled
                                    />
                                </div>
                                <div class="input-group flex-nowrap">
                                    <span
                                        class="input-group-text"
                                        id="addon-wrapping"
                                        style="width: 105px"
                                        >Email</span
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        placeholder="/xyz"
                                        aria-describedby="addon-wrapping"
                                        v-model="modalUser.email"
                                        disabled
                                    />
                                </div>
                                <div class="input-group flex-nowrap">
                                    <span
                                        class="input-group-text"
                                        id="addon-wrapping"
                                        style="width: 105px"
                                        >Role</span
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        placeholder="/xyz"
                                        aria-describedby="addon-wrapping"
                                        v-model="modalUser.role"
                                    />
                                </div>
                            </from>
                            <div class="d-flex" style="justify-content: center; padding: 10px; color: green" v-if="modalUserEditStatus ===true ">
                                Data saved successfully
                            </div>
                            <div class="d-flex" style="justify-content: center; padding: 10px; color: red" v-if="modalUserEditStatus === false ">
                                Data not saved not , try after some time
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                Close
                            </button>
                            <button type="submit" class="btn btn-primary" @click="updateUser">
                                Update user
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- user modal view end-->

            <div class="container-fluid mx-0 px-0 my-2">
                <div class="row">
                    <div class="col-md-5 col-sm-11" style="background-color: #ececec; height: 100%">
                        <from @submit.prevent="updateProxy">
                            <div class="form_box_centre" v-for="(fields, index) in proxy">
                                <div class="input-group flex-nowrap">
                                    <span
                                        class="input-group-text"
                                        id="addon-wrapping"
                                        style="width: 105px"
                                        >Source</span
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        placeholder="/xyz"
                                        aria-describedby="addon-wrapping"
                                        v-model="fields.source"
                                    />
                                </div>
                                <div class="input-group flex-nowrap" style="margin-top: 5px">
                                    <span
                                        class="input-group-text"
                                        id="addon-wrapping"
                                        style="width: 105px"
                                        >Destination</span
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        placeholder="http://domain/something"
                                        aria-describedby="addon-wrapping"
                                        v-model="fields.destination"
                                    />
                                </div>
                                <div class="input-group flex-nowrap" style="margin-top: 5px">
                                    <span
                                        class="input-group-text"
                                        id="addon-wrapping"
                                        style="width: 105px"
                                        >Scope</span
                                    >
                                    <input
                                        type="text"
                                        class="form-control"
                                        placeholder="Admin , basic , HR"
                                        aria-describedby="addon-wrapping"
                                        v-model="fields.scope"
                                    />
                                </div>
                                <button
                                    type="button"
                                    class="btn btn-sm btn-danger my-1"
                                    @click="removeField(index)"
                                >
                                    Remove
                                </button>
                            </div>

                            <div
                                class="d-flex"
                                style="justify-content: space-between; padding: 10px"
                            >
                                <button
                                    type="button"
                                    class="btn btn-secondary pull-right"
                                    @click="addField"
                                >
                                    Add New
                                </button>
                                <button
                                    type="submit"
                                    class="btn btn-secondary pull-right"
                                    @click="updateProxy"
                                >
                                    Update
                                </button>
                            </div>
                        </from>
                        <div class="d-flex" style="justify-content: center; padding: 10px; color: green" v-if="proxyEditStatus ===true ">
                            Data saved successfully
                        </div>
                        <div class="d-flex" style="justify-content: center; padding: 10px; color: red" v-if="proxyEditStatus === false ">
                            Data not saved not , try after some time
                        </div>
                    </div>

                    <div
                        class="col-md-6 col-sm-11 box_centre"
                        style="background-color: #ececec; margin-left: 10px; height: 100%"
                    >
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Status</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Email</th>
                                    <th scope="col">Role</th>
                                    <th scope="col">view</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="user in allusers">
                                    <td>
                                        <span
                                            v-if="currentLogInUsers.includes(user.id)"
                                            style="color: #598d59"
                                        >
                                            Online
                                        </span>
                                        <span v-else> Offline </span>
                                    </td>
                                    <td>{{ user.name }}</td>
                                    <td>{{ user.email }}</td>
                                    <td>{{ user.modifiedRole }}</td>
                                    <td>
                                        <button
                                            type="button"
                                            class="btn btn-outline-primary btn-sm"
                                            @click="openModal(user)"
                                        >
                                            +
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"
        ></script>
        <script src="https://kit.fontawesome.com/d278adcdd4.js" crossorigin="anonymous"></script>
        <script src="/static/vue.js"></script>
        <script src="/static/axios.js"></script>
        <script>
            const app = Vue.createApp({
                data() {
                    return {
                        baseURL: '',
                        proxy: [],
                        proxyEditStatus : null,
                        error: '',
                        allusers: '',
                        currentLogInUsers: [],
                        modalUser: {
                            name: '',
                            email: '',
                            role: ''
                        },
                        modalUserEditStatus : null,
                    };
                },
                methods: {
                    openModal: function (user) {
                        this.modalUser = { ...user };
                        this.modalUser.role = this.modalUser.role.join();
                        console.log(this.modalUser);
                        const myModal = new bootstrap.Modal(
                            document.getElementById('userDetailsModal')
                        );
                        myModal.show();
                    },
                    updateUser: async function () {
                        try {
                            const patch_url = this.baseURL + '/auth/admin/action/user';
                            const newUserData = {
                                id: this.modalUser.id,
                                role: this.modalUser.role.split(',')
                            };
                            const response = await axios.patch(patch_url, newUserData);
                            if(response.data.status){
                                this.modalUserEditStatus = true
                            } else{
                                this.modalUserEditStatus = false
                            }
                        } catch (err) {
                            console.log(err);
                            this.modalUserEditStatus = false
                        }
                    },
                    updateProxy: async function () {
                        try {
                            const post_url = this.baseURL + '/auth/admin/action/proxy';
                            const response = await axios.put(post_url, {
                                proxy: JSON.stringify(this.proxy)
                            });
                            if (response.data?.success === 1) {
                                this.proxyEditStatus =true;
                            } else {
                                this.proxyEditStatus =false;
                            }
                        } catch (err) {
                            console.log(err);
                            if (err?.response?.data?.errorMsg) {
                                this.proxyEditStatus =false;
                            } else {
                                this.proxyEditStatus =false;
                            }
                        }
                    },
                    getProxy: async function () {
                        try {
                            const get_url = this.baseURL + '/auth/admin/action/proxy';
                            const response = await axios.get(get_url);
                            if (response.data?.success && response.data?.proxyValue) {
                                if (Object.keys(response.data.proxyValue).length) {
                                    const arr = [];
                                    for (const property in response.data.proxyValue) {
                                        arr.push({
                                            source: property,
                                            destination:
                                                response.data.proxyValue[property].destination,
                                            scope: response.data.proxyValue[property].scope.join()
                                        });
                                    }
                                    this.proxy = arr;
                                } else {
                                    this.proxy = [{ source: '', destination: '' }];
                                }
                            } else {
                                this.error += 'Error, Please refresh this page and  try again ';
                            }
                        } catch (err) {
                            console.log(err);
                            if (err?.response?.data?.errorMsg) {
                                this.error += err.response.data.errorMsg;
                            } else {
                                this.error += 'Error, Please try again after some time';
                            }
                        }
                    },
                    getAllUsers: async function () {
                        try {
                            const get_url = this.baseURL + '/auth/admin/action/all-user';
                            const response = await axios.get(get_url);
                            if (response.data?.success && response.data?.users) {
                                response.data.users.forEach((element) => {
                                    element.role = JSON.parse(element.role);
                                    element.modifiedRole = element.role.join();
                                });
                                this.allusers = response.data.users;
                                // console.log(this.allusers);

                                if (response.data.currentUsers) {
                                    this.currentLogInUsers = response.data.currentUsers.map((v) =>
                                        parseInt(v, 10)
                                    );
                                }
                            } else {
                                this.error += 'Error, Please refresh this page and  try again ';
                            }
                        } catch (err) {
                            console.log(err);
                            if (err?.response?.data?.errorMsg) {
                                this.error += err.response.data.errorMsg;
                            } else {
                                this.error += 'Error, Please try again after some time';
                            }
                        }
                    },
                    addField: function () {
                        const arr = JSON.parse(JSON.stringify(this.proxy));
                        arr.push({ source: '', destination: '' });
                        this.proxy = arr;
                    },
                    removeField: async function (index) {
                        const arr = JSON.parse(JSON.stringify(this.proxy));
                        arr.splice(index, 1);
                        this.proxy = arr;
                        await this.updateProxy();
                    }
                },
                mounted: async function () {
                    this.baseURL = '<%= baseURL %>';

                    await this.getProxy();
                    await this.getAllUsers();
                }
            });
            app.mount('#app');
        </script>
    </body>
</html>
